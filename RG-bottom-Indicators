//@version=5
indicator("RSIMFI", "RSIMFI", false, format.price, 2, explicit_plot_zorder = true)

//-----------------------------------------------------------------------------}
// RSI Table
//-----------------------------------------------------------------------------{

rsiLengthInput = input.int(14, minval=1, title="RSI Length", group="RSI Settings")
rsiSourceInput = input.source(close, "Source", group="RSI Settings")
ob = input.float(70,step=10,title="Over Bought level",group='RSI Settings')
os   = input.float(30,step=10,title="Over Sold level",group='RSI Settings')

MTF1 = input.timeframe('1', "TimeFrame 1",group='TimeFrame Settings')
MTF2 = input.timeframe('5', "TimeFrame 2",group='TimeFrame Settings')
MTF3 = input.timeframe('15', "TimeFrame 3",group='TimeFrame Settings')
MTF4 = input.timeframe('60', "TimeFrame 4",group='TimeFrame Settings')
MTF5 = input.timeframe('D', "TimeFrame 5",group='TimeFrame Settings')

head_tcolor = input(color.new(#ffffff,70),'Header Text Color',group='Table Style')
head_area = input(color.new(#CCffff,70),'Header Background Color',group='Table Style')
ob_area = input(color.new(#0cb51a,70),'Over Bought Background Color',group='Table Style')
os_area = input(color.new(#ff1100,70),'Over Sold Background Color',group='Table Style')
mid_area = input(color.new(#ff1100,70),'Mid-Range Background Color',group='Table Style')
ob_tcolor = input(color.new(#0cb51a,70),'Over Bought Text Color',group='Table Style')
os_tcolor = input(color.new(#ff1100,70),'Over Sold Text Color',group='Table Style')
mid_tcolor = input(color.new(#ff1100,70),'Mid-Range Text Color',group='Table Style')

rsiLowerBand = hline(40, "RSI Lower Band", color=#fa9589)
rsiMidBand = hline(50, "RSI Mid Band", color=#56adf0)
rsiHiBand = hline(60, "RSI High Band", color=#8affb7)

RSIMFT1 = request.security(syminfo.tickerid, MTF1, ta.rsi(rsiSourceInput,rsiLengthInput))
RSIMFT2 = request.security(syminfo.tickerid, MTF2, ta.rsi(rsiSourceInput,rsiLengthInput))
RSIMFT3 = request.security(syminfo.tickerid, MTF3, ta.rsi(rsiSourceInput,rsiLengthInput))
RSIMFT4 = request.security(syminfo.tickerid, MTF4, ta.rsi(rsiSourceInput,rsiLengthInput))
RSIMFT5 = request.security(syminfo.tickerid, MTF5, ta.rsi(rsiSourceInput,rsiLengthInput))

RSIMFT1bg =
     (RSIMFT1 >= ob) ? ob_area :
     (RSIMFT1 <= os) ? os_area :
     (RSIMFT1 < ob and RSIMFT1 > os) ? mid_area :
     na

RSIMFT2bg =
     (RSIMFT2 >= ob) ? ob_area :
     (RSIMFT2 <= os) ? os_area :
     (RSIMFT2 < ob and RSIMFT2 > os) ? mid_area :
     na

RSIMFT3bg =
     (RSIMFT3 >= ob) ? ob_area :
     (RSIMFT3 <= os) ? os_area :
     (RSIMFT3 < ob and RSIMFT3 > os) ? mid_area :
     na

RSIMFT4bg =
     (RSIMFT4 >= ob) ? ob_area :
     (RSIMFT4 <= os) ? os_area :
     (RSIMFT4 < ob and RSIMFT4 > os) ? mid_area :
     na

RSIMFT5bg =
     (RSIMFT5 >= ob) ? ob_area :
     (RSIMFT5 <= os) ? os_area :
     (RSIMFT5 < ob and RSIMFT5 > os) ? mid_area :
     na

RSIMFT1txt =
     (RSIMFT1 >= ob) ? ob_tcolor :
     (RSIMFT1 <= os) ? os_tcolor :
     (RSIMFT1 < ob and RSIMFT1 > os) ? mid_tcolor :
     na

RSIMFT2txt =
     (RSIMFT2 >= ob) ? ob_tcolor :
     (RSIMFT2 <= os) ? os_tcolor :
     (RSIMFT2 < ob and RSIMFT2 > os) ? mid_tcolor :
     na

RSIMFT3txt =
     (RSIMFT3 >= ob) ? ob_tcolor :
     (RSIMFT3 <= os) ? os_tcolor :
     (RSIMFT3 < ob and RSIMFT3 > os) ? mid_tcolor :
     na

RSIMFT4txt =
     (RSIMFT4 >= ob) ? ob_tcolor :
     (RSIMFT4 <= os) ? os_tcolor :
     (RSIMFT4 < ob and RSIMFT4 > os) ? mid_tcolor :
     na
    
RSIMFT5txt =
     (RSIMFT5 >= ob) ? ob_tcolor :
     (RSIMFT5 <= os) ? os_tcolor :
     (RSIMFT5 < ob and RSIMFT5 > os) ? mid_tcolor :
     na

var tb = table.new(position.top_right,5,2)
if barstate.islast
    table.cell(tb,0,0,MTF1,text_color=head_tcolor,bgcolor=head_area)
    table.cell(tb,1,0,MTF2,text_color=head_tcolor,bgcolor=head_area)
    table.cell(tb,2,0,MTF3,text_color=head_tcolor,bgcolor=head_area)
    table.cell(tb,3,0,MTF4,text_color=head_tcolor,bgcolor=head_area)
    table.cell(tb,4,0,MTF5,text_color=head_tcolor,bgcolor=head_area)
    
    table.cell(tb,0,1,str.tostring(RSIMFT1,'#.##'),text_color=RSIMFT1txt,bgcolor=RSIMFT1bg)
    table.cell(tb,1,1,str.tostring(RSIMFT2,'#.##'),text_color=RSIMFT2txt,bgcolor=RSIMFT2bg)
    table.cell(tb,2,1,str.tostring(RSIMFT3,'#.##'),text_color=RSIMFT3txt,bgcolor=RSIMFT3bg)
    table.cell(tb,3,1,str.tostring(RSIMFT4,'#.##'),text_color=RSIMFT4txt,bgcolor=RSIMFT4bg)
    table.cell(tb,4,1,str.tostring(RSIMFT5,'#.##'),text_color=RSIMFT5txt,bgcolor=RSIMFT5bg)


//-----------------------------------------------------------------------------}
// MFI
//-----------------------------------------------------------------------------{

mfilength = input.int(title="Length mfi", defval=14, minval=1, maxval=2000)
lengthMA = input.int(title="Length mfi-MA", defval=5, minval=1, maxval=2000)
lengthMAvol = input.int(title="Length MA VOL for smooth mfi", defval=5, minval=1, maxval=2000)

src = input(hlc3)
mf = ta.mfi(src, mfilength)
MF= ta.sma(mf,lengthMA )


volMA= ta.ema(volume,lengthMAvol)
float upper = math.sum(volMA * (ta.change(src) <= 0.0 ? 0.0 : src), mfilength)
float lower = math.sum(volMA * (ta.change(src) >= 0.0 ? 0.0 : src), mfilength)
mfi = 100.0 - (100.0 / (1.0 + upper / lower))

plot(mfi, "MFI SMOOTH", color=#ffffff)

//-----------------------------------------------------------------------------}
// RSI DIVERGENCE
//-----------------------------------------------------------------------------{
len = input.int(title="RSI Period", minval=1, defval=14)

lbR = input(title="Pivot Lookback Right", defval=5)
lbL = input(title="Pivot Lookback Left", defval=5)
rangeUpper = input(title="Max of Lookback Range", defval=60)
rangeLower = input(title="Min of Lookback Range", defval=5)
plotBull = input(title="Plot Bullish", defval=true)
plotHiddenBull = input(title="Plot Hidden Bullish", defval=false)
plotBear = input(title="Plot Bearish", defval=true)
plotHiddenBear = input(title="Plot Hidden Bearish", defval=false)
bearColor = color.red
bullColor = color.green
hiddenBullColor = color.new(color.green, 80)
hiddenBearColor = color.new(color.red, 80)
textColor = color.white
noneColor = color.new(color.white, 100)
osc = ta.rsi(src, len)

plot(osc, title="RSI", linewidth=2, color=#27ccbd)

hline(50, title="Middle Line", color=#787B86, linestyle=hline.style_dotted)
obLevel = hline(70, title="Overbought", color=#787B86, linestyle=hline.style_dotted)
osLevel = hline(30, title="Oversold", color=#787B86, linestyle=hline.style_dotted)
fill(obLevel, osLevel, title="Background", color=color.rgb(33, 150, 243, 90))

plFound = na(ta.pivotlow(osc, lbL, lbR)) ? false : true
phFound = na(ta.pivothigh(osc, lbL, lbR)) ? false : true
_inRange(cond) =>
	bars = ta.barssince(cond == true)
	rangeLower <= bars and bars <= rangeUpper

//------------------------------------------------------------------------------
// Regular Bullish
// Osc: Higher Low

oscHL = osc[lbR] > ta.valuewhen(plFound, osc[lbR], 1) and _inRange(plFound[1])

// Price: Lower Low

priceLL = low[lbR] < ta.valuewhen(plFound, low[lbR], 1)
bullCond = plotBull and priceLL and oscHL and plFound

plot(
     plFound ? osc[lbR] : na,
     offset=-lbR,
     title="Regular Bullish",
     linewidth=2,
     color=(bullCond ? bullColor : noneColor)
     )

plotshape(
	 bullCond ? osc[lbR] : na,
	 offset=-lbR,
	 title="Regular Bullish Label",
	 text=" Bull ",
	 style=shape.labelup,
	 location=location.absolute,
	 color=bullColor,
	 textcolor=textColor
	 )

//------------------------------------------------------------------------------
// Hidden Bullish
// Osc: Lower Low

oscLL = osc[lbR] < ta.valuewhen(plFound, osc[lbR], 1) and _inRange(plFound[1])

// Price: Higher Low

priceHL = low[lbR] > ta.valuewhen(plFound, low[lbR], 1)
hiddenBullCond = plotHiddenBull and priceHL and oscLL and plFound

plot(
	 plFound ? osc[lbR] : na,
	 offset=-lbR,
	 title="Hidden Bullish",
	 linewidth=2,
	 color=(hiddenBullCond ? hiddenBullColor : noneColor)
	 )

plotshape(
	 hiddenBullCond ? osc[lbR] : na,
	 offset=-lbR,
	 title="Hidden Bullish Label",
	 text=" H Bull ",
	 style=shape.labelup,
	 location=location.absolute,
	 color=bullColor,
	 textcolor=textColor
	 )

//------------------------------------------------------------------------------
// Regular Bearish
// Osc: Lower High

oscLH = osc[lbR] < ta.valuewhen(phFound, osc[lbR], 1) and _inRange(phFound[1])

// Price: Higher High

priceHH = high[lbR] > ta.valuewhen(phFound, high[lbR], 1)

bearCond = plotBear and priceHH and oscLH and phFound

plot(
	 phFound ? osc[lbR] : na,
	 offset=-lbR,
	 title="Regular Bearish",
	 linewidth=2,
	 color=(bearCond ? bearColor : noneColor)
	 )

plotshape(
	 bearCond ? osc[lbR] : na,
	 offset=-lbR,
	 title="Regular Bearish Label",
	 text=" Bear ",
	 style=shape.labeldown,
	 location=location.absolute,
	 color=bearColor,
	 textcolor=textColor
	 )

//------------------------------------------------------------------------------
// Hidden Bearish
// Osc: Higher High

oscHH = osc[lbR] > ta.valuewhen(phFound, osc[lbR], 1) and _inRange(phFound[1])

// Price: Lower High

priceLH = high[lbR] < ta.valuewhen(phFound, high[lbR], 1)

hiddenBearCond = plotHiddenBear and priceLH and oscHH and phFound

plot(
	 phFound ? osc[lbR] : na,
	 offset=-lbR,
	 title="Hidden Bearish",
	 linewidth=2,
	 color=(hiddenBearCond ? hiddenBearColor : noneColor)
	 )

plotshape(
	 hiddenBearCond ? osc[lbR] : na,
	 offset=-lbR,
	 title="Hidden Bearish Label",
	 text=" H Bear ",
	 style=shape.labeldown,
	 location=location.absolute,
	 color=bearColor,
	 textcolor=textColor
	 )